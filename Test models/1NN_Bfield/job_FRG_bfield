#!/bin/bash
#SBATCH --job-name=1NN
#SBATCH --partition=small-short
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=1
#SBATCH --time=24:00:00
#SBATCH --cpus-per-task=16
#SBATCH --output=%x_%j.out

# Load required modules
module load openmpi/5.0.5
module load ucx/1.16.0
module load gcclibs/11.4.1

#in case you need python NOTE THIS ONLY WORKS ON MY lcr23 ACCOUNT

# Suppress UCX warnings for unused environment variables
export UCX_WARN_UNUSED_ENV_VARS=n

# disable hcoll
export OMPI_MCA_coll_hcoll_enable=0

export OMP_NUM_THREADS=$SLURM_CPUS_PER_TASK

export LD_LIBRARY_PATH=/home/mr303/diverge:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/software/GCCLIBS/lib/:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/software/MPI/openmpi-5.0.5/lib:$LD_LIBRARY_PATH

# Run code


nk=$1
nkf=$2
PointsFile=$3

time_log=$4
labels=("SC" "SDW" "CDW" "FL")

U_array=()
J_array=()

if [ ! -d k${nk}_kf_${nkf} ]; then
        mkdir k${nk}_kf_${nkf}
fi



#read in the U and J points to loop over
while read -r num1 num2; do
    U_array+=("$num1")
    J_array+=("$num2")
done < $PointsFile

#go through all those U and J points. 
for i in "${!U_array[@]}"; do
    filename=k${nk}_kf_${nkf}/1NNb1_${U_array[i]}_${J_array[i]}_${nk}_${nkf}.out
    if [ -e $filename ]; then
         echo $filename "already exists"
    else
        echo "Calculation:" ${U_array[i]} ${J_array[i]} $nk $nkf $filename
        time_taken=$({ time ./FRG_1NN_ff4.x ${U_array[i]} ${J_array[i]} $nk $nkf> $filename; } 2>&1 | grep "real" | awk '{print $2}')
        final_data=$(tail -n1 $filename)
 	read -a fields <<< "$final_data"
	if [ "${#fields[@]}" -eq 0 ]; then
    		echo "Error: fields array is empty in file $filename" >&2
    	continue  # Skip this iteration
	fi

        last_column="${fields[-1]}" #The maximum value
        first_column="${fields[0]}" #The final energy

        if [[ "$first_column" =~ e-06$ ]]; then
        final_label="${labels[-1]}" #its a Fermi Liquid
        else
        for i in "${!fields[@]}"; do
                if [[ "${fields[$i]}" == "$last_column" ]]; then
                final_label="${labels[$((i-1))]}"
                break
                fi
        done
        fi
        echo -n  "$filename " >> $time_log
        echo -n  "$final_label " >> $time_log
        echo -n  "$first_column " >> $time_log
        echo  "$time_taken"  >> $time_log
    fi
done


